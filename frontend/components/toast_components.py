import streamlit as st
import time

def save_edit_category():
    msg = st.toast("Actualizando categorÃ­a...", icon = "ğŸ”„")
    time.sleep(2)
    msg.toast(f"CategorÃ­a {st.session_state.edit_category} actualizada", icon="âœ…")
    time.sleep(2)
    msg.toast("Redireccionando a categorias", icon = "ğŸ”„")


def confirm_delete_category():
    msg = st.toast("Eliminando categorÃ­a...", icon="ğŸ”„")
    time.sleep(2)
    msg.toast(f"CategorÃ­a {st.session_state.delete_category} eliminada", icon="âœ…")
    time.sleep(2)
    msg.toast("Redireccionando a categorias", icon="ğŸ”„")

def confirm_add_category():
    msg = st.toast("Agregando categorÃ­a...", icon="ğŸ”„")
    time.sleep(2)
    msg.toast(f"CategorÃ­a {st.session_state.new_category_input} agregada", icon="âœ…")
    time.sleep(2)
    msg.toast("Redireccionando a categorias", icon="ğŸ”„")


# AÃ±adimos las funciones para tags
def save_edit_tag():
    msg = st.toast("Actualizando etiqueta...", icon="ğŸ”„")
    time.sleep(2)
    msg.toast(f"Etiqueta {st.session_state.edit_tag} actualizada", icon="âœ…")
    time.sleep(2)
    msg.toast("Redireccionando a etiquetas", icon="ğŸ”„")


def confirm_delete_tag():
    msg = st.toast("Eliminando etiqueta...", icon="ğŸ”„")
    time.sleep(2)
    msg.toast(f"Etiqueta {st.session_state.delete_tag} eliminada", icon="âœ…")
    time.sleep(2)
    msg.toast("Redireccionando a etiquetas", icon="ğŸ”„")


def confirm_add_tag():
    msg = st.toast("Agregando etiqueta...", icon="ğŸ”„")
    time.sleep(2)
    msg.toast(f"Etiqueta {st.session_state.new_tag_input} agregada", icon="âœ…")
    time.sleep(2)
    msg.toast("Redireccionando a etiquetas", icon="ğŸ”„")
